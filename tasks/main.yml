---
# tasks file for ansible-role-wireguard
- name: Create a wireguard network
  community.docker.docker_network:
    name: "{{ service_name }}_network"
    ipam_driver: default
    driver_options:
      com.docker.network.bridge.name: br-wireguard
    ipam_config:
      - gateway: "{{ wireguard_network_gateway_ip }}"
        subnet: "{{ wireguard_network_subnet }}"

- name: Make sure the Wireguard container is created and running (Server Mode)
  community.docker.docker_container:
    name: "{{ service_name }}"
    image: "lscr.io/linuxserver/wireguard"
    restart: true
    pull: true
    privileged: true
    sysctls:
      "net.ipv4.conf.all.src_valid_mark": "1"
    capabilities:
      - net_admin
      - sys_module
    state: "started"
    env:
      TZ: "{{ timezone }}"
      SERVERURL: "{{ wireguard_server_url }}"
      PEERS: "{{ wireguard_server_peers }}"
      INTERNAL_SUBNET: "{{ wireguard_server_internal_subnet }}"
      ALLOWEDIPS: "{{ wireguard_server_allowed_ips }}"
      PEERDNS: "{{ wireguard_server_peerdns }}"
      LOG_CONFS: "true"
    networks:
      - name: "{{ service_name }}_network"
        ipv4_address: "{{ wireguard_container_ip }}"
    ports:
      - "51820:51820/udp"
    volumes:
      - "/{{ service_data_path }}/config:/config"
      - "/lib/modules:/lib/modules"
    restart_policy: unless-stopped
  when: wireguard_server_mode

- name: Create wg_configs directory
  ansible.builtin.file:
    path: "{{ wireguard_client_configs_directory }}"
    owner: 911
    group: 911
    mode: "0640"
    recurse: true
    state: directory  
  when: not wireguard_server_mode

- name: Make sure the Wireguard container is created and running (Client Mode)
  community.docker.docker_container:
    name: "{{ service_name }}"
    image: "lscr.io/linuxserver/wireguard"
    restart: true
    pull: true
    privileged: true
    sysctls:
      "net.ipv4.conf.all.src_valid_mark": "1"
    capabilities:
      - net_admin
      - sys_module
    network_mode: bridge
    state: "started"
    env:
      TZ: "{{ timezone }}"
    networks:
      - name: "{{ service_name }}_network"
        ipv4_address: "{{ wireguard_container_ip }}"
    volumes:
      - "{{ service_data_path }}/config:/config"
      - "/lib/modules:/lib/modules"
    restart_policy: unless-stopped
  when: not wireguard_server_mode

- name: Create wireguard config files
  ansible.builtin.include_tasks: create_confs.yml
  loop: "{{ wireguard_client_configs }}"
  when: not wireguard_server_mode

- name: Remove already existing routes
  ansible.builtin.include_tasks: remove_existing_routes.yml
  loop: "{{ wireguard_client_route_subnets }}"
  when: wireguard_client_route_subnets | length > 0

- name: Create service to register routes and startup
  ansible.builtin.include_tasks: add_routes_service.yml
  when: wireguard_client_route_subnets | length > 0